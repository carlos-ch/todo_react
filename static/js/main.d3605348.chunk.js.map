{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","setTodos","className","onSubmit","e","preventDefault","input","target","querySelector","newTodo","id","uuidv4","description","value","done","htmlFor","type","placeholder","required","Todo","todo","checkHandler","deleteHandler","onClick","name","checked","TodoList","todoInState","parentElement","filter","item","checkedTodos","map","closest","toggleStatus","App","useState","useEffect","localStorage","getItem","fromLocalStorage","JSON","parse","setItem","getFromLocalStorage","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3605348.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles/Form.css';\n\nconst Form = ({ todos, setTodos }) => {\n  const submitHandler = e => {\n    e.preventDefault();\n    const input = e.target.querySelector('.todo-input');\n    const newTodo = {\n      id: uuidv4(),\n      description: input.value,\n      done: false,\n    };\n    setTodos([...todos, newTodo]);\n    input.value = '';\n  };\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <label htmlFor=\"new-input\" className=\"label\">\n          Write your to-do here\n        </label>\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          placeholder=\"I need to...\"\n          required\n        />\n        <button className=\"btn btn--submit\" type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport './styles/Todo.css';\n\n// prettier-ignore\nconst Todo = ({\n  id, todo, checkHandler, deleteHandler,\n}) => (\n  <article id={id} className={`todo-wrapper ${todo.done ? 'done' : ''}`}>\n    <input className=\"checkbox\" onClick={checkHandler} type=\"checkbox\" name=\"done\" checked={todo.done}/>\n    <button\n      onClick={deleteHandler}\n      className={`btn todo--btn__delete ${todo.done ? 'hide' : ''}`}\n    >\n      Remove\n    </button>\n    <p className=\"todo-item--p\">{todo.description}\n    </p>\n  </article>\n);\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\nimport './styles/TodoList.css';\n\nconst TodoList = ({ todos, setTodos }) => {\n  const getFromState = (id, arr) => arr.filter(todo => todo.id === id)[0];\n\n  const deleteHandler = e => {\n    const todoInState = getFromState(e.target.parentElement.id, todos);\n    setTodos(todos.filter(item => item !== todoInState));\n  };\n\n  const toggleStatus = todo => {\n    if (todo.done) {\n      return { ...todo, done: false };\n    }\n    return { ...todo, done: true };\n  };\n\n  const checkHandler = e => {\n    const checkedTodos = todos.map(todo => {\n      if (todo.id === e.target.closest('article').id) {\n        return toggleStatus(todo);\n      }\n      return todo;\n    });\n    setTodos(checkedTodos);\n  };\n  return (\n    <div className=\"todos-wrapper\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          id={todo.id}\n          todo={todo}\n          checkHandler={checkHandler}\n          deleteHandler={deleteHandler}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const getFromLocalStorage = () => {\n    if (!localStorage.getItem('localTodos')) {\n      localStorage.setItem('localTodos', '[]');\n    } else {\n      const fromLocalStorage = JSON.parse(localStorage.getItem('localTodos'));\n      setTodos(fromLocalStorage);\n    }\n  };\n\n  const setToLocalStorage = () => {\n    localStorage.setItem('localTodos', JSON.stringify(todos));\n  };\n\n  useEffect(() => {\n    getFromLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    setToLocalStorage();\n  }, [todos]);\n  return (\n    <div className=\"app-wrapper\">\n      <header className=\"header--title\">\n        <h1>to_do</h1>\n        <aside>manager</aside>\n      </header>\n      <Form todos={todos} setTodos={setTodos} />\n      <TodoList todos={todos} setTodos={setTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}